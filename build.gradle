plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.7'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'api-gateway'
version = '1.0'
description = 'An API Gateway for all microservices'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	google()
}

ext {
	set('springCloudVersion', "2024.0.0")
	jwtApiVersion = '0.12.6'
	lombokVersion = '1.18.34'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-vault-config'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	// Security - JWT
	implementation "io.jsonwebtoken:jjwt-api:${jwtApiVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtApiVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jwtApiVersion}"

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

bootJar {
	archiveFileName = "${project.group}" + "-" + "${project.version}" + ".jar"
}

tasks.named('test') {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed" //, "standardOut", "standardError"

		showExceptions true
		exceptionFormat "full"
		showCauses true
		showStackTraces true

		// Change to `true` for more verbose test output
		showStandardStreams = false
	}
}
